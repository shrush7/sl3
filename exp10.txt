datasource="https://www.geeksforgeeks.org/exploratory-data-analysis-on-iris-dataset/"

import pandas as pd
import numpy as np

import matplotlib.pyplot as plt
import seaborn as sns

df=pd.read_csv("iris.csv")

df

df.info()

df.describe()

df.isnull().sum()

data = df.drop_duplicates(subset ="variety")
data

df.value_counts("variety")

# importing packages
import seaborn as sns
import matplotlib.pyplot as plt


sns.countplot(x="variety", data=df, )
plt.show()

# importing packages
import seaborn as sns
import matplotlib.pyplot as plt


sns.scatterplot(x='sepal.length', y='sepal.width',
				hue="variety", data=df, )

sns.scatterplot(x='petal.length', y='petal.width',
				hue="variety", data=df, )


sns.pairplot(df,hue="variety", height=2)

df

plt.hist(df['sepal.length'])
plt.hist(df['petal.length'])
plt.hist(df['petal.width'])
plt.hist(df['sepal.width'])

fig, axes = plt.subplots(2, 2, figsize=(10,10))

axes[0,0].set_title("Sepal Length")
axes[0,0].hist(df['sepal.length'], bins=7)

axes[0,1].set_title("Sepal Width")
axes[0,1].hist(df['sepal.width'], bins=5);

axes[1,0].set_title("Petal Length")
axes[1,0].hist(df['petal.length'], bins=6);

axes[1,1].set_title("Petal Width")
axes[1,1].hist(df['petal.width'], bins=6);


df.head()

# importing packages
import seaborn as sns
import matplotlib.pyplot as plt

def graph(y):
	sns.boxplot(x="variety", y=y, data=df)

plt.figure(figsize=(10,10))
	
# Adding the subplot at the specified
# grid position
plt.subplot(221)
graph('sepal.length')

plt.subplot(222)
graph('sepal.width')

plt.subplot(223)
graph('petal.length')

plt.subplot(224)
graph('petal.width')

plt.show()


df = pd.read_csv('iris.csv')

sns.boxplot(x='sepal.width', data=df)

# Load the dataset
df = pd.read_csv('iris.csv')

# IQR
Q1 = np.percentile(df['sepal.width'], 25,
				interpolation = 'midpoint')

Q3 = np.percentile(df['sepal.width'], 75,
				interpolation = 'midpoint')
IQR = Q3 - Q1

print("Old Shape: ", df.shape)

# Upper bound
upper = np.where(df['sepal.width'] >= (Q3+1.5*IQR))

# Lower bound
lower = np.where(df['sepal.width'] <= (Q1-1.5*IQR))

# Removing the Outliers
df.drop(upper[0], inplace = True)
df.drop(lower[0], inplace = True)

print("New Shape: ", df.shape)

sns.boxplot(x='sepal.width', data=df)



